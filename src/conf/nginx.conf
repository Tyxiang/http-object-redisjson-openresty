worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/json;
    #lua_shared_dict share_dict 100m;
    init_by_lua_file http_object/init.lua;
    sendfile        on;
    keepalive_timeout  65;
    server {
        listen       8080;
        server_name  localhost;
        location / {
            # default_type application/json;
            # 关闭lua缓存，只能用于方便调试，修改lua文件后nginx不需要重新reload
            lua_code_cache off;
            # 引入Lua脚本文件
            content_by_lua_file http_object/root.lua;
        }
        location /admin {
            # default_type application/json;
            # 关闭lua缓存，只能用于方便调试，修改lua文件后nginx不需要重新reload
            lua_code_cache off;
            # 引入Lua脚本文件
            content_by_lua_file http_object/admin.lua;
        }
        location /object {
            # default_type application/json;
            # 关闭lua缓存，只能用于方便调试，修改lua文件后nginx不需要重新reload
            lua_code_cache off;
            # 引入Lua脚本文件
            content_by_lua_file http_object/object.lua;
        }
        location /restful {
            # default_type application/json;
            # 关闭lua缓存，只能用于方便调试，修改lua文件后nginx不需要重新reload
            lua_code_cache off;
            # 引入Lua脚本文件
            content_by_lua_file http_object/restful.lua;
        }
    }
}
